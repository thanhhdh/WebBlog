@model WebBlog.ViewModels.HomeVM;
@using X.PagedList
@using X.PagedList.Mvc.Core
@{
    ViewData["Title"] = "Home Page";
    string pageThumbnail = "";
    if (Model.ThumbnailUrl == null)
    {

        pageThumbnail = "/blog/assets/img/home-bg.jpg";
    }
    else
    {
        pageThumbnail = "/thumbnails/" + Model.ThumbnailUrl;

    }
}

<header class="py-5 bg-light border-bottom mb-4" style="background-image: url(@pageThumbnail)">
    <div class="container">
        <div class="text-center my-5">
            <h1 class="fw-bolder">@Model.Title</h1>
            <p class="lead mb-0">@Model.ShortDescription</p>
        </div>
    </div>
</header>

<div class="container">
    <div class="row">
            <!-- Featured blog post-->
            <div class="row">
                @foreach (var post in Model.Posts!)
                {
                <div class="col-lg-4">
                        <div class="card mb-4">
                            <a asp-action="Post" asp-controller="Blog" asp-route-slug="@post.Slug"><img class="card-img-top" src="/thumbnails/@post.ThumbnailUrl" alt="@post.Title" /></a>
                            <div class="card-body">
                                <div class="small text-muted">@post.CreatedDate</div>
                                <h2 class="card-title h4">@post.Title</h2>
                                <p class="card-text">@post.ShortDescription</p>
                                <a asp-action="Post" asp-controller="Blog" asp-route-slug="@post.Slug" class="btn btn-primary">Read more →</a>
                            </div>
                        </div>
                </div>
                }
            </div>

           
            <!-- Pagination-->
            Page @(Model?.Posts.PageCount < Model?.Posts.PageNumber ? 0 : Model?.Posts.PageNumber) of @Model?.Posts.PageCount
            @Html.PagedListPager(Model?.Posts, page => Url.Action("Index",
                     new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }),
                     new PagedListRenderOptions()
            {
                ContainerDivClasses = new List<string> { "blog", "navigation" },
                UlElementClasses = new List<string> { "pagination" },
                LiElementClasses = new List<string> { "page-item", "page-link" },
                ActiveLiElementClass = "active",
            })

        
    </div>
</div>